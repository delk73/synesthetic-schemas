name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix and configure Flakes
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Install project dependencies
        run: |
          # This single command runs inside the Nix shell, ensuring the
          # correct versions of Poetry and NPM are used to install dependencies.
          nix develop --command bash -c "
            echo '--- Installing project dependencies for CI ---'
            poetry install
            npm install
          "

      - name: Check for codegen-related file changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            codegen:
              - 'jsonschema/**'
              - 'codegen/**'
              - 'scripts/**'
              - 'pyproject.toml'
              - 'poetry.lock'
              - 'package.json'
              - 'package-lock.json'
              - 'Makefile'

      - name: Run preflight (with codegen-check)
        if: steps.changes.outputs.codegen == 'true'
        run: |
          # We run preflight inside the Nix shell to ensure it uses
          # the same tools and environment as a local developer.
          nix develop --command ./preflight.sh

      - name: Run preflight (skip codegen-check)
        if: steps.changes.outputs.codegen != 'true'
        run: |
          # We wrap the command in bash -c to pass the environment variable
          # into the Nix shell correctly.
          nix develop --command bash -c "SKIP_CODEGEN_CHECK=1 ./preflight.sh"