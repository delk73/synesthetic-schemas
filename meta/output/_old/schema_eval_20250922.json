{
  "date": "20250922",
  "schemas": {
    "control-bundle": {
      "path": "jsonschema/control-bundle.schema.json",
      "title": "control-bundle",
      "id": "https://schemas.synesthetic.dev/0.7.3/control-bundle.schema.json",
      "version": "0.7.3",
      "properties": [
        "control_parameters",
        "description",
        "meta_info",
        "name"
      ],
      "required": [
        "name",
        "control_parameters"
      ],
      "defs": {}
    },
    "control": {
      "path": "jsonschema/control.schema.json",
      "title": "control",
      "id": "https://schemas.synesthetic.dev/0.7.3/control.schema.json",
      "version": "0.7.3",
      "properties": [
        "default",
        "label",
        "mappings",
        "max",
        "min",
        "options",
        "parameter",
        "smoothingTime",
        "step",
        "type",
        "unit"
      ],
      "required": [
        "parameter",
        "label",
        "type",
        "unit",
        "default",
        "mappings"
      ],
      "defs": {
        "ActionType": {
          "properties": [
            "axis",
            "curve",
            "scale",
            "sensitivity"
          ],
          "required": [
            "axis",
            "sensitivity"
          ]
        },
        "AxisType": {
          "properties": [],
          "required": [],
          "enum": [
            "mouse.x",
            "mouse.y",
            "mouse.wheel"
          ]
        },
        "ComboType": {
          "properties": [
            "keys",
            "mouseButtons",
            "strict",
            "wheel"
          ],
          "required": []
        },
        "CurveType": {
          "properties": [],
          "required": [],
          "enum": [
            "linear",
            "exponential",
            "sine",
            "discrete"
          ]
        },
        "DataType": {
          "properties": [],
          "required": [],
          "enum": [
            "float",
            "int",
            "bool",
            "string"
          ]
        },
        "Mapping": {
          "properties": [
            "action",
            "combo"
          ],
          "required": [
            "combo",
            "action"
          ]
        }
      }
    },
    "haptic": {
      "path": "jsonschema/haptic.schema.json",
      "title": "haptic",
      "id": "https://schemas.synesthetic.dev/0.7.3/haptic.schema.json",
      "version": "0.7.3",
      "properties": [
        "description",
        "device",
        "input_parameters",
        "meta_info",
        "name"
      ],
      "required": [
        "device",
        "input_parameters",
        "name"
      ],
      "defs": {
        "DeviceConfig": {
          "properties": [
            "options",
            "type"
          ],
          "required": [
            "type",
            "options"
          ]
        },
        "DeviceOptionValue": {
          "properties": [
            "unit",
            "value"
          ],
          "required": [
            "value",
            "unit"
          ]
        },
        "HapticParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "options",
            "parameter",
            "path",
            "smoothingTime",
            "step",
            "type",
            "unit"
          ],
          "required": [
            "name",
            "parameter",
            "path",
            "type",
            "unit",
            "default"
          ]
        }
      }
    },
    "modulation": {
      "path": "jsonschema/modulation.schema.json",
      "title": "modulation",
      "id": "https://schemas.synesthetic.dev/0.7.3/modulation.schema.json",
      "version": "0.7.3",
      "properties": [
        "description",
        "meta_info",
        "modulations",
        "name"
      ],
      "required": [
        "modulations",
        "name"
      ],
      "defs": {
        "ModulationItem": {
          "properties": [
            "amplitude",
            "frequency",
            "id",
            "max",
            "min",
            "offset",
            "phase",
            "scale",
            "scaleProfile",
            "target",
            "type",
            "waveform"
          ],
          "required": [
            "id",
            "target",
            "type",
            "waveform",
            "frequency",
            "amplitude",
            "offset",
            "phase"
          ]
        }
      }
    },
    "rule-bundle": {
      "path": "jsonschema/rule-bundle.schema.json",
      "title": "rule-bundle",
      "id": "https://schemas.synesthetic.dev/0.7.3/rule-bundle.schema.json",
      "version": "0.7.3",
      "properties": [
        "created_at",
        "description",
        "id",
        "meta_info",
        "name",
        "rules",
        "updated_at"
      ],
      "required": [
        "name",
        "rules"
      ],
      "defs": {
        "Rule": {
          "properties": [
            "effects",
            "execution",
            "expr",
            "id",
            "target",
            "trigger"
          ],
          "required": [
            "id"
          ]
        }
      }
    },
    "rule": {
      "path": "jsonschema/rule.schema.json",
      "title": "rule",
      "id": "https://schemas.synesthetic.dev/0.7.3/rule.schema.json",
      "version": "0.7.3",
      "properties": [
        "effects",
        "execution",
        "expr",
        "id",
        "target",
        "trigger"
      ],
      "required": [
        "id"
      ],
      "defs": {}
    },
    "shader": {
      "path": "jsonschema/shader.schema.json",
      "title": "shader",
      "id": "https://schemas.synesthetic.dev/0.7.3/shader.schema.json",
      "version": "0.7.3",
      "properties": [
        "description",
        "fragment_shader",
        "input_parameters",
        "meta_info",
        "name",
        "uniforms",
        "vertex_shader"
      ],
      "required": [
        "fragment_shader",
        "name",
        "vertex_shader"
      ],
      "defs": {
        "InputParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "parameter",
            "path",
            "smoothingTime",
            "step",
            "type"
          ],
          "required": [
            "name",
            "parameter",
            "path",
            "type",
            "default",
            "min",
            "max"
          ]
        },
        "UniformDef": {
          "properties": [
            "default",
            "name",
            "stage",
            "type"
          ],
          "required": [
            "name",
            "type",
            "stage",
            "default"
          ]
        }
      }
    },
    "synesthetic-asset": {
      "path": "jsonschema/synesthetic-asset.schema.json",
      "title": "synesthetic-asset",
      "id": "https://schemas.synesthetic.dev/0.7.3/synesthetic-asset.schema.json",
      "version": "0.7.3",
      "properties": [
        "control",
        "created_at",
        "description",
        "haptic",
        "meta_info",
        "modulation",
        "modulations",
        "name",
        "rule_bundle",
        "shader",
        "tone",
        "updated_at"
      ],
      "required": [
        "name"
      ],
      "defs": {}
    },
    "tone": {
      "path": "jsonschema/tone.schema.json",
      "title": "tone",
      "id": "https://schemas.synesthetic.dev/0.7.3/tone.schema.json",
      "version": "0.7.3",
      "properties": [
        "description",
        "effects",
        "input_parameters",
        "meta_info",
        "name",
        "parts",
        "patterns",
        "synth"
      ],
      "required": [
        "name",
        "synth"
      ],
      "defs": {
        "SynthType": {
          "properties": [],
          "required": [],
          "enum": [
            "Tone.Synth",
            "Tone.PolySynth",
            "Tone.MonoSynth",
            "Tone.FMSynth",
            "Tone.AMSynth",
            "Tone.DuoSynth",
            "Tone.MembraneSynth",
            "Tone.MetalSynth",
            "Tone.PluckSynth"
          ]
        },
        "ToneEffect": {
          "properties": [
            "options",
            "order",
            "type"
          ],
          "required": [
            "type",
            "options",
            "order"
          ]
        },
        "ToneMetaInfo": {
          "properties": [
            "category",
            "complexity",
            "tags"
          ],
          "required": [
            "category",
            "tags",
            "complexity"
          ]
        },
        "ToneParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "options",
            "parameter",
            "path",
            "smoothingTime",
            "type",
            "unit"
          ],
          "required": [
            "name",
            "path",
            "type",
            "default"
          ]
        },
        "TonePart": {
          "properties": [
            "duration",
            "id",
            "loop",
            "pattern",
            "start"
          ],
          "required": [
            "id",
            "pattern",
            "start",
            "duration"
          ]
        },
        "TonePattern": {
          "properties": [
            "id",
            "options",
            "type"
          ],
          "required": [
            "id",
            "type",
            "options"
          ]
        },
        "ToneSynth": {
          "properties": [
            "options",
            "type"
          ],
          "required": [
            "type",
            "options"
          ]
        },
        "ToneSynthOptions": {
          "properties": [
            "envelope",
            "filter",
            "filterEnvelope",
            "oscillator",
            "portamento",
            "volume"
          ],
          "required": [
            "oscillator",
            "envelope",
            "volume"
          ]
        }
      }
    }
  },
  "schema_inventory": [
    {
      "schema": "control-bundle",
      "fields": [
        "control_parameters",
        "description",
        "meta_info",
        "name"
      ]
    },
    {
      "schema": "control",
      "fields": [
        "default",
        "label",
        "mappings",
        "max",
        "min",
        "options",
        "parameter",
        "smoothingTime",
        "step",
        "type",
        "unit"
      ]
    },
    {
      "schema": "haptic",
      "fields": [
        "description",
        "device",
        "input_parameters",
        "meta_info",
        "name"
      ]
    },
    {
      "schema": "modulation",
      "fields": [
        "description",
        "meta_info",
        "modulations",
        "name"
      ]
    },
    {
      "schema": "rule-bundle",
      "fields": [
        "created_at",
        "description",
        "id",
        "meta_info",
        "name",
        "rules",
        "updated_at"
      ]
    },
    {
      "schema": "rule",
      "fields": [
        "effects",
        "execution",
        "expr",
        "id",
        "target",
        "trigger"
      ]
    },
    {
      "schema": "shader",
      "fields": [
        "description",
        "fragment_shader",
        "input_parameters",
        "meta_info",
        "name",
        "uniforms",
        "vertex_shader"
      ]
    },
    {
      "schema": "synesthetic-asset",
      "fields": [
        "control",
        "created_at",
        "description",
        "haptic",
        "meta_info",
        "modulation",
        "modulations",
        "name",
        "rule_bundle",
        "shader",
        "tone",
        "updated_at"
      ]
    },
    {
      "schema": "tone",
      "fields": [
        "description",
        "effects",
        "input_parameters",
        "meta_info",
        "name",
        "parts",
        "patterns",
        "synth"
      ]
    }
  ],
  "component_inventories": {
    "Shader": {
      "source": "jsonschema/shader.schema.json",
      "title": "shader",
      "top_level_fields": [
        "description",
        "fragment_shader",
        "input_parameters",
        "meta_info",
        "name",
        "uniforms",
        "vertex_shader"
      ],
      "required": [
        "fragment_shader",
        "name",
        "vertex_shader"
      ],
      "defs": {
        "InputParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "parameter",
            "path",
            "smoothingTime",
            "step",
            "type"
          ],
          "required": [
            "name",
            "parameter",
            "path",
            "type",
            "default",
            "min",
            "max"
          ]
        },
        "UniformDef": {
          "properties": [
            "default",
            "name",
            "stage",
            "type"
          ],
          "required": [
            "name",
            "type",
            "stage",
            "default"
          ]
        }
      }
    },
    "Tone": {
      "source": "jsonschema/tone.schema.json",
      "title": "tone",
      "top_level_fields": [
        "description",
        "effects",
        "input_parameters",
        "meta_info",
        "name",
        "parts",
        "patterns",
        "synth"
      ],
      "required": [
        "name",
        "synth"
      ],
      "defs": {
        "SynthType": {
          "properties": [],
          "required": [],
          "enum": [
            "Tone.Synth",
            "Tone.PolySynth",
            "Tone.MonoSynth",
            "Tone.FMSynth",
            "Tone.AMSynth",
            "Tone.DuoSynth",
            "Tone.MembraneSynth",
            "Tone.MetalSynth",
            "Tone.PluckSynth"
          ]
        },
        "ToneEffect": {
          "properties": [
            "options",
            "order",
            "type"
          ],
          "required": [
            "type",
            "options",
            "order"
          ]
        },
        "ToneMetaInfo": {
          "properties": [
            "category",
            "complexity",
            "tags"
          ],
          "required": [
            "category",
            "tags",
            "complexity"
          ]
        },
        "ToneParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "options",
            "parameter",
            "path",
            "smoothingTime",
            "type",
            "unit"
          ],
          "required": [
            "name",
            "path",
            "type",
            "default"
          ]
        },
        "TonePart": {
          "properties": [
            "duration",
            "id",
            "loop",
            "pattern",
            "start"
          ],
          "required": [
            "id",
            "pattern",
            "start",
            "duration"
          ]
        },
        "TonePattern": {
          "properties": [
            "id",
            "options",
            "type"
          ],
          "required": [
            "id",
            "type",
            "options"
          ]
        },
        "ToneSynth": {
          "properties": [
            "options",
            "type"
          ],
          "required": [
            "type",
            "options"
          ]
        },
        "ToneSynthOptions": {
          "properties": [
            "envelope",
            "filter",
            "filterEnvelope",
            "oscillator",
            "portamento",
            "volume"
          ],
          "required": [
            "oscillator",
            "envelope",
            "volume"
          ]
        }
      }
    },
    "Haptic": {
      "source": "jsonschema/haptic.schema.json",
      "title": "haptic",
      "top_level_fields": [
        "description",
        "device",
        "input_parameters",
        "meta_info",
        "name"
      ],
      "required": [
        "device",
        "input_parameters",
        "name"
      ],
      "defs": {
        "DeviceConfig": {
          "properties": [
            "options",
            "type"
          ],
          "required": [
            "type",
            "options"
          ]
        },
        "DeviceOptionValue": {
          "properties": [
            "unit",
            "value"
          ],
          "required": [
            "value",
            "unit"
          ]
        },
        "HapticParameter": {
          "properties": [
            "default",
            "max",
            "min",
            "name",
            "options",
            "parameter",
            "path",
            "smoothingTime",
            "step",
            "type",
            "unit"
          ],
          "required": [
            "name",
            "parameter",
            "path",
            "type",
            "unit",
            "default"
          ]
        }
      }
    },
    "Modulation": {
      "source": "jsonschema/modulation.schema.json",
      "title": "modulation",
      "top_level_fields": [
        "description",
        "meta_info",
        "modulations",
        "name"
      ],
      "required": [
        "modulations",
        "name"
      ],
      "defs": {
        "ModulationItem": {
          "properties": [
            "amplitude",
            "frequency",
            "id",
            "max",
            "min",
            "offset",
            "phase",
            "scale",
            "scaleProfile",
            "target",
            "type",
            "waveform"
          ],
          "required": [
            "id",
            "target",
            "type",
            "waveform",
            "frequency",
            "amplitude",
            "offset",
            "phase"
          ]
        }
      }
    },
    "RuleBundle": {
      "source": "jsonschema/rule-bundle.schema.json",
      "title": "rule-bundle",
      "top_level_fields": [
        "created_at",
        "description",
        "id",
        "meta_info",
        "name",
        "rules",
        "updated_at"
      ],
      "required": [
        "name",
        "rules"
      ],
      "defs": {
        "Rule": {
          "properties": [
            "effects",
            "execution",
            "expr",
            "id",
            "target",
            "trigger"
          ],
          "required": [
            "id"
          ]
        }
      }
    },
    "Control": {
      "source": "jsonschema/control.schema.json",
      "title": "control",
      "top_level_fields": [
        "default",
        "label",
        "mappings",
        "max",
        "min",
        "options",
        "parameter",
        "smoothingTime",
        "step",
        "type",
        "unit"
      ],
      "required": [
        "parameter",
        "label",
        "type",
        "unit",
        "default",
        "mappings"
      ],
      "defs": {
        "ActionType": {
          "properties": [
            "axis",
            "curve",
            "scale",
            "sensitivity"
          ],
          "required": [
            "axis",
            "sensitivity"
          ]
        },
        "AxisType": {
          "properties": [],
          "required": [],
          "enum": [
            "mouse.x",
            "mouse.y",
            "mouse.wheel"
          ]
        },
        "ComboType": {
          "properties": [
            "keys",
            "mouseButtons",
            "strict",
            "wheel"
          ],
          "required": []
        },
        "CurveType": {
          "properties": [],
          "required": [],
          "enum": [
            "linear",
            "exponential",
            "sine",
            "discrete"
          ]
        },
        "DataType": {
          "properties": [],
          "required": [],
          "enum": [
            "float",
            "int",
            "bool",
            "string"
          ]
        },
        "Mapping": {
          "properties": [
            "action",
            "combo"
          ],
          "required": [
            "combo",
            "action"
          ]
        }
      }
    },
    "Examples": {
      "Control-Bundle_Example.json": {
        "path": "examples/Control-Bundle_Example.json",
        "top_level_fields": [
          "$schemaRef",
          "name",
          "description",
          "meta_info",
          "control_parameters"
        ]
      },
      "Haptic_Example.json": {
        "path": "examples/Haptic_Example.json",
        "top_level_fields": [
          "$schemaRef",
          "name",
          "description",
          "meta_info",
          "device",
          "input_parameters"
        ]
      },
      "Rule-Bundle_Example.json": {
        "path": "examples/Rule-Bundle_Example.json",
        "top_level_fields": [
          "$schemaRef",
          "name",
          "description",
          "meta_info",
          "rules"
        ]
      },
      "Shader_Example.json": {
        "path": "examples/Shader_Example.json",
        "top_level_fields": [
          "$schemaRef",
          "description",
          "fragment_shader",
          "input_parameters",
          "meta_info",
          "name",
          "uniforms",
          "vertex_shader"
        ]
      },
      "SynestheticAsset_Example1.json": {
        "path": "examples/SynestheticAsset_Example1.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "rule_bundle",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example2.json": {
        "path": "examples/SynestheticAsset_Example2.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "rule_bundle",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example3.json": {
        "path": "examples/SynestheticAsset_Example3.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example4.json": {
        "path": "examples/SynestheticAsset_Example4.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example5.json": {
        "path": "examples/SynestheticAsset_Example5.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example6.json": {
        "path": "examples/SynestheticAsset_Example6.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "rule_bundle",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example7.json": {
        "path": "examples/SynestheticAsset_Example7.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example8.json": {
        "path": "examples/SynestheticAsset_Example8.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_Example9.json": {
        "path": "examples/SynestheticAsset_Example9.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "rule_bundle",
          "shader",
          "tone"
        ]
      },
      "SynestheticAsset_ExampleDS.json": {
        "path": "examples/SynestheticAsset_ExampleDS.json",
        "top_level_fields": [
          "$schemaRef",
          "control",
          "description",
          "haptic",
          "meta_info",
          "modulations",
          "name",
          "rule_bundle",
          "shader",
          "tone"
        ]
      },
      "Tone_Example.json": {
        "path": "examples/Tone_Example.json",
        "top_level_fields": [
          "$schemaRef",
          "name",
          "description",
          "meta_info",
          "synth",
          "effects",
          "patterns",
          "parts",
          "input_parameters"
        ]
      }
    }
  },
  "asset_composition": {
    "source": "jsonschema/synesthetic-asset.schema.json",
    "title": "synesthetic-asset",
    "fields": [
      "control",
      "created_at",
      "description",
      "haptic",
      "meta_info",
      "modulation",
      "modulations",
      "name",
      "rule_bundle",
      "shader",
      "tone",
      "updated_at"
    ],
    "required": [
      "name"
    ]
  }
}
