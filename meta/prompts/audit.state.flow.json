{
  "version": "v0.7.3",
  "spec_ref": "docs/schema_flow.md#synesthetic-schemas-expected-state-and-flow",
  "task": "Operational State & Flow Audit",
  "owner": "Synesthetic Schemas WG",
  "lastReviewed": "2025-10-12",
  "objective": "Verify that the repository matches the expected operational state and flow for schema authoring, normalization, publication, and governance defined for v0.7.3.",
  "scope": {
    "files": [
      "jsonschema/*.schema.json",
      "docs/schema/0.7.3/*.schema.json",
      "version.json",
      "Makefile",
      "build.sh",
      "preflight.sh",
      "scripts/validate_schemas.py",
      "examples/*.json",
      "python/src/synesthetic_schemas/",
      "typescript/src/"
    ]
  },
  "constraints": {
    "style": "deterministic, terse, Markdown headings + tables",
    "rules": [
      "jsonschema/ must be the only editable schema source; docs/schema/<version>/ must contain generated immutable outputs.",
      "version.json must include schemaVersion = '0.7.3'.",
      "Every $id in docs/schema/0.7.3/*.schema.json must match https://delk73.github.io/synesthetic-schemas/schema/0.7.3/{filename}.",
      "make normalize and make preflight-fix must exist and operate deterministically (no untracked changes).",
      "build.sh must regenerate SDKs (python/src/, typescript/src/) cleanly inside Nix + Poetry context.",
      "preflight.sh must run normalize in --check mode, codegen-check, and example validation.",
      "check-schema-ids, codegen-check, and publish-schemas targets must exist in the Makefile.",
      "examples/ must validate successfully via scripts/validate_schemas.py.",
      "docs/schema/0.7.3/ must contain no editable files and no drift from jsonschema/ beyond $id normalization.",
      "All paths in .cache/ and meta/output/ should be ephemeral unless committed for governance reasons.",
      "No references to raw.githubusercontent.com or schemas.synesthetic.dev are permitted in published schemas."
    ],
    "sections": [
      "Summary of repository operational compliance",
      "Editable vs generated schema boundary check",
      "Version.json alignment and $id verification",
      "Makefile and build target presence check",
      "Preflight reproducibility and CI parity validation",
      "Example validation results",
      "Detected drifts or missing targets",
      "Remediation actions"
    ]
  },
  "output": {
    "paths": [
      "meta/output/flow_audit_latest.md"
    ],
    "format": "Markdown",
    "must_write": true,
    "stdout_optional": true
  },
  "exit_criteria": [
    "meta/output/flow_audit_latest.md written and non-empty",
    "All $id and $ref URLs verified canonical",
    "No diff between jsonschema/ and docs/schema/0.7.3/",
    "Makefile targets (normalize, publish-schemas, check-schema-ids, codegen-check) confirmed present",
    "preflight.sh and build.sh validated for determinism",
    "All examples validate successfully",
    "Remediation section generated if discrepancies exist"
  ]
}
