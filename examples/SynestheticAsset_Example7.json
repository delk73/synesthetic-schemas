{
  "name": "Circle Harmony7",
  "description": "A circular pattern that pulses with polyphonic audio sequences, enriched with effects, synchronized haptic feedback, and an adjustable ASCII‑resolution slider with a gray‑to‑purple colour ramp.",
  "meta_info": {
    "category": "multimodal",
    "tags": [
      "circle",
      "sdf",
      "ascii",
      "purple",
      "audio",
      "interactive",
      "haptic",
      "polyphonic"
    ],
    "complexity": "medium"
  },

  "shader": {
    "name": "Shader_Ultima3_TileColor",
    "vertex_shader": "void main(){ gl_Position = vec4(position,1.0); }",
    "fragment_shader": "uniform vec2 u_resolution;uniform float u_time;uniform vec3 u_backgroundColor;uniform float u_px;uniform float u_py;uniform float u_r;uniform float u_poX;uniform float u_poY;uniform float u_ro;uniform float u_str;uniform float u_stro;uniform float u_m;uniform float u_mo;uniform float u_sub;uniform float u_subo;uniform int u_iterations;uniform float u_asciiSegmentSize;uniform float u_asciiTextSize;uniform float u_noise_amount;uniform int u_asciiLevels;float rand(vec2 co){return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);}float applyCirclesMinLogic(vec2 p_val,float r_val,float str_val,float m_val,float sub_val){float base_sdf=length(p_val)-r_val;if(str_val<0.001)return base_sdf*m_val-sub_val;return(abs(base_sdf)-str_val)*m_val-sub_val;}vec3 getColor(float t){t=clamp(t,0.0,1.0);vec3 g=vec3(t);vec3 p=vec3(0.4+0.6*t,0.0,0.8*t);return mix(g,p,t);}float baseCharSDF(int idx,vec2 uv){vec2 au=abs(uv);if(idx<2)return 1.0;if(idx==2)return length(uv)-0.1;if(idx==3)return au.y-0.2;if(idx==4)return abs(uv.x-uv.y)-0.15;if(idx==5)return min(au.x,au.y)-0.2;if(idx==6)return abs(au.x-au.y)-0.2;if(idx==7)return max(au.x,au.y)-0.4;if(idx==8){vec2 d=au-vec2(0.5,0.2);return min(max(d.x,d.y),0.0)+length(max(d,0.0))-0.1;}if(idx==9){float c=mod(floor(uv.x*3.0)+floor(uv.y*3.0),2.0);return c<1.0?1.0:-1.0;}if(idx==10)return min(abs(uv.x+uv.y),abs(uv.x-uv.y))-0.2;if(idx==11)return abs(uv.x)+abs(uv.y)-0.6;if(idx==12)return abs(length(uv)-0.5)-0.2;if(idx==13){float c=mod(floor(uv.x*4.0)+floor(uv.y*4.0),2.0);return c<1.0?-1.0:1.0;}if(idx==14)return min(abs(uv.x)+abs(uv.y)-0.7,max(au.x,au.y)-0.4);return max(au.x,au.y)-0.6;}float getCharSDF(int index,vec2 uv){uv/=max(u_asciiTextSize,0.1);uv*=1.2;int baseIdx=index&15;float sdf=baseCharSDF(baseIdx,uv);if(index>=16) sdf=-sdf;return sdf;}void main(){vec2 st=(gl_FragCoord.xy*2.0-u_resolution.xy)/u_resolution.y;vec2 tile_uv=st*u_asciiSegmentSize;vec2 id=floor(tile_uv);vec2 intra=fract(tile_uv)*2.0-1.0;vec2 samp=(id+0.5)/u_asciiSegmentSize;vec2 p=samp-vec2(u_px,u_py);float r=u_r,str=u_str,m=u_m,sub=u_sub;float d=applyCirclesMinLogic(p,r,str,m,sub);for(int i=1;i<u_iterations;i++){p+=vec2(u_poX,u_poY);r+=u_ro;str+=u_stro*float(i);m+=u_mo*float(i);sub+=u_subo*float(i);d=min(d,applyCirclesMinLogic(p,r,str,m,sub));}float lum=1.0-smoothstep(-0.05,0.05,d);float phase=dot(id,vec2(0.1,0.05))+u_time*0.5;float noise=rand(id)*u_noise_amount;float cphase=sin(phase)*0.5+0.5+noise;vec3 tileColor=getColor(cphase);int ci=int(lum*float(u_asciiLevels));ci=clamp(ci,0,u_asciiLevels-1);float sdf=getCharSDF(ci,intra);float mask=1.0-smoothstep(0.0,0.05,sdf);vec3 col=mix(u_backgroundColor,tileColor,mask);gl_FragColor=vec4(col,1.0);} ",
    "shader_lib_id": 1,
    "uniforms": [
      {"name":"u_time","type":"float","stage":"fragment","default":0.0},
      {"name":"u_resolution","type":"vec2","stage":"fragment","default":[800.0,600.0]},
      {"name":"u_backgroundColor","type":"vec3","stage":"fragment","default":"#000000"},
      {"name":"u_px","type":"float","stage":"fragment","default":0.0},
      {"name":"u_py","type":"float","stage":"fragment","default":0.0},
      {"name":"u_r","type":"float","stage":"fragment","default":0.5},
      {"name":"u_poX","type":"float","stage":"fragment","default":0.0},
      {"name":"u_poY","type":"float","stage":"fragment","default":0.05},
      {"name":"u_ro","type":"float","stage":"fragment","default":0.02},
      {"name":"u_str","type":"float","stage":"fragment","default":0.01},
      {"name":"u_stro","type":"float","stage":"fragment","default":0.005},
      {"name":"u_m","type":"float","stage":"fragment","default":1.0},
      {"name":"u_mo","type":"float","stage":"fragment","default":0.0},
      {"name":"u_sub","type":"float","stage":"fragment","default":0.0},
      {"name":"u_subo","type":"float","stage":"fragment","default":0.0},
      {"name":"u_iterations","type":"int","stage":"fragment","default":5},
      {"name":"u_asciiSegmentSize","type":"float","stage":"fragment","default":70.0},
      {"name":"u_asciiTextSize","type":"float","stage":"fragment","default":1.0},
      {"name":"u_noise_amount","type":"float","stage":"fragment","default":0.1},
      {"name":"u_asciiLevels","type":"int","stage":"fragment","default":32}
    ],
    "input_parameters": [
      {"name":"Iterations","parameter":"u_iterations","path":"u_iterations","type":"int","default":5,"min":1,"max":30,"step":1},
      {"name":"ASCII Segments","parameter":"u_asciiSegmentSize","path":"u_asciiSegmentSize","type":"float","default":70.0,"min":10.0,"max":200.0,"step":1.0},
      {"name":"ASCII Text Size","parameter":"u_asciiTextSize","path":"u_asciiTextSize","type":"float","default":1.0,"min":0.2,"max":2.0,"step":0.01},
      {"name":"Color Noise","parameter":"u_noise_amount","path":"u_noise_amount","type":"float","default":0.1,"min":0.0,"max":0.5,"step":0.01},
      {"name":"ASCII Levels","parameter":"u_asciiLevels","path":"u_asciiLevels","type":"int","default":32,"min":1,"max":64,"step":1},
      {"name":"Position X","parameter":"u_px","path":"u_px","type":"float","default":0.0,"min":-1.0,"max":1.0,"step":0.001},
      {"name":"Position Y","parameter":"u_py","path":"u_py","type":"float","default":0.0,"min":-1.0,"max":1.0,"step":0.001},
      {"name":"Initial Radius","parameter":"u_r","path":"u_r","type":"float","default":0.5,"min":0.01,"max":1.0,"step":0.001},
      {"name":"Iter Pos X Offset","parameter":"u_poX","path":"u_poX","type":"float","default":0.0,"min":-0.2,"max":0.2,"step":0.001},
      {"name":"Iter Pos Y Offset","parameter":"u_poY","path":"u_poY","type":"float","default":0.05,"min":-0.2,"max":0.2,"step":0.001},
      {"name":"Iter Radius Offset","parameter":"u_ro","path":"u_ro","type":"float","default":0.02,"min":-0.1,"max":0.1,"step":0.001},
      {"name":"Initial Stroke","parameter":"u_str","path":"u_str","type":"float","default":0.01,"min":0.0,"max":0.2,"step":0.001},
      {"name":"Iter Stroke Offset","parameter":"u_stro","path":"u_stro","type":"float","default":0.005,"min":-0.05,"max":0.05,"step":0.001},
      {"name":"Initial Multiplier","parameter":"u_m","path":"u_m","type":"float","default":1.0,"min":0.1,"max":5.0,"step":0.01},
      {"name":"Iter Multiplier Offset","parameter":"u_mo","path":"u_mo","type":"float","default":0.0,"min":-0.5,"max":0.5,"step":0.01},
      {"name":"Initial Subtract","parameter":"u_sub","path":"u_sub","type":"float","default":0.0,"min":-0.5,"max":0.5,"step":0.01},
      {"name":"Iter Subtract Offset","parameter":"u_subo","path":"u_subo","type":"float","default":0.0,"min":-0.2,"max":0.2,"step":0.01}
    ]
  },

  "tone": {
    "name": "Canonical Tone.Synth7",
    "description": "A canonical Tone.Synth patch representing the full parameter space for runtime modulation and control.",
    "meta_info": {
      "category": "tone",
      "tags": ["canonical", "tone.synth", "template", "full-control"],
      "complexity": "high"
    },
    "synth": {
      "type": "Tone.Synth",
      "volume": -12,
      "detune": 0,
      "portamento": 0.05,
      "envelope": {
        "attack": 0.05,
        "attackCurve": "exponential",
        "decay": 0.2,
        "decayCurve": "exponential",
        "sustain": 0.2,
        "release": 1.5,
        "releaseCurve": "exponential"
      },
      "oscillator": {
        "type": "amtriangle",
        "modulationType": "sine",
        "harmonicity": 0.5,
        "partials": [],
        "phase": 0
      }
    },
    "effects": [
      {
        "type": "Tone.Reverb",
        "options": { "decay": 2.0, "preDelay": 0.01, "wet": 0.3 },
        "order": 0
      },
      {
        "type": "Tone.Chorus",
        "options": { "frequency": 1.5, "delayTime": 2.5, "depth": 0.7, "wet": 0.2 },
        "order": 1
      }
    ],
    "patterns": [
      {
        "id": "canonical_loop",
        "type": "Tone.Pattern",
        "options": { "pattern": "up", "values": ["C4", "E4", "G4", "B4"], "interval": "4n", "duration": "8n" }
      }
    ],
    "parts": [
      { "id": "loop", "pattern": "canonical_loop", "start": "0:0:0", "duration": "2m", "loop": true }
    ],
    "input_parameters": [
      { "name": "Volume", "parameter": "volume", "path": "tone.volume", "type": "float", "unit": "dB", "default": -12, "min": -60, "max": 6, "step": 0.1 },
      { "name": "Detune", "parameter": "detune", "path": "tone.detune", "type": "float", "unit": "cents", "default": 0, "min": -1200, "max": 1200, "step": 1 },
      { "name": "Portamento", "parameter": "portamento", "path": "tone.portamento", "type": "float", "unit": "s", "default": 0.05, "min": 0, "max": 1, "step": 0.01 },
      { "name": "Attack", "parameter": "envelope.attack", "path": "tone.envelope.attack", "type": "float", "unit": "s", "default": 0.05, "min": 0.01, "max": 2.0, "step": 0.01 },
      { "name": "Attack Curve", "parameter": "envelope.attackCurve", "path": "tone.envelope.attackCurve", "type": "string", "unit": "curve", "default": "exponential", "options": ["linear", "exponential", "sine", "cosine", "bounce", "ripple", "step"] },
      { "name": "Decay", "parameter": "envelope.decay", "path": "tone.envelope.decay", "type": "float", "unit": "s", "default": 0.2, "min": 0.01, "max": 2.0, "step": 0.01 },
      { "name": "Decay Curve", "parameter": "envelope.decayCurve", "path": "tone.envelope.decayCurve", "type": "string", "unit": "curve", "default": "exponential", "options": ["linear", "exponential"] },
      { "name": "Sustain", "parameter": "envelope.sustain", "path": "tone.envelope.sustain", "type": "float", "unit": "normalRange", "default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01 },
      { "name": "Release", "parameter": "envelope.release", "path": "tone.envelope.release", "type": "float", "unit": "s", "default": 1.5, "min": 0.01, "max": 5.0, "step": 0.01 },
      { "name": "Release Curve", "parameter": "envelope.releaseCurve", "path": "tone.envelope.releaseCurve", "type": "string", "unit": "curve", "default": "exponential", "options": ["linear", "exponential", "sine", "cosine", "bounce", "ripple", "step"] },
      { "name": "Oscillator Type", "parameter": "oscillator.type", "path": "tone.oscillator.type", "type": "string", "unit": "type", "default": "amtriangle", "options": ["sine", "square", "triangle", "sawtooth", "pulse", "pwm", "fmsine", "fmsquare", "fmtriangle", "fmsawtooth", "amsine", "amsquare", "amtriangle", "amsawtooth", "fatsine", "fatsquare", "fattriangle", "fatsawtooth"] },
      { "name": "Modulation Type", "parameter": "oscillator.modulationType", "path": "tone.oscillator.modulationType", "type": "string", "unit": "type", "default": "sine", "options": ["sine", "square", "triangle", "sawtooth"] },
      { "name": "Harmonicity", "parameter": "oscillator.harmonicity", "path": "tone.oscillator.harmonicity", "type": "float", "unit": "ratio", "default": 0.5, "min": 0, "max": 4, "step": 0.01 },
      { "name": "Oscillator Phase", "parameter": "oscillator.phase", "path": "tone.oscillator.phase", "type": "float", "unit": "degrees", "default": 0, "min": 0, "max": 360, "step": 1 },
      { "name": "Reverb Decay", "parameter": "effects.0.decay", "path": "tone.effects.0.decay", "type": "float", "unit": "s", "default": 2.0, "min": 0.1, "max": 10.0, "step": 0.1 },
      { "name": "Reverb PreDelay", "parameter": "effects.0.preDelay", "path": "tone.effects.0.preDelay", "type": "float", "unit": "s", "default": 0.01, "min": 0, "max": 0.5, "step": 0.001 },
      { "name": "Reverb Wet", "parameter": "effects.0.wet", "path": "tone.effects.0.wet", "type": "float", "unit": "normalRange", "default": 0.3, "min": 0, "max": 1.0, "step": 0.01 }
    ]
  },

  "haptic": {
    "name": "Circle Feedback7",
    "description": "Haptic feedback tied to circle properties and audio rhythm",
    "meta_info": {
      "category": "haptic",
      "tags": ["pulse", "vibration", "rhythmic"],
      "complexity": "medium"
    },
    "device": {
      "type": "generic",
      "options": {
        "maxIntensity": { "value": 1.0, "unit": "linear" },
        "maxFrequency": { "value": 250.0, "unit": "Hz" }
      }
    },
    "input_parameters": [
      { "name": "Intensity", "parameter": "haptic.intensity", "path": "haptic.intensity", "type": "float", "unit": "linear", "default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01, "smoothingTime": 0.1 },
      { "name": "Frequency", "parameter": "haptic.frequency", "path": "haptic.frequency", "type": "float", "unit": "Hz", "default": 150.0, "min": 10.0, "max": 250.0, "step": 1, "smoothingTime": 0.1 }
    ]
  },

  "control": {
    "name": "Circle Harmony Controls7",
    "description": "Interactive controls for manipulating circle visuals, audio synthesis, and haptic feedback",
    "meta_info": {
      "category": "control",
      "tags": ["interactive", "multimodal", "visual", "audio", "haptic"],
      "complexity": "medium"
    },
    "control_parameters": [
      {
        "parameter": "shader.u_px",
        "label": "Position X",
        "type": "float",
        "unit": "linear",
        "default": 0.0,
        "min": -1.0,
        "max": 1.0,
        "step": 0.01,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["left"], "strict": true },
            "action": { "axis": "mouse.x", "sensitivity": 0.001, "scale": 1.0, "curve": "linear" }
          }
        ]
      },
      {
        "parameter": "shader.u_py",
        "label": "Position Y",
        "type": "float",
        "unit": "linear",
        "default": 0.0,
        "min": -1.0,
        "max": 1.0,
        "step": 0.01,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["left"], "strict": true },
            "action": { "axis": "mouse.y", "sensitivity": -0.001, "scale": 1.0, "curve": "linear" }
          }
        ]
      },
      {
        "parameter": "shader.u_r",
        "label": "Radius",
        "type": "float",
        "unit": "linear",
        "default": 0.5,
        "min": 0.1,
        "max": 2.0,
        "step": 0.01,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["left"], "keys": ["Shift"], "strict": true },
            "action": { "axis": "mouse.x", "sensitivity": 0.01, "scale": 1.0, "curve": "linear" }
          },
          {
            "combo": { "wheel": true, "keys": ["Shift"], "strict": true },
            "action": { "axis": "mouse.wheel", "sensitivity": 0.01, "scale": 1.0, "curve": "linear" }
          }
        ]
      },
      {
        "parameter": "tone.detune",
        "label": "Detune",
        "type": "float",
        "unit": "linear",
        "default": 0.0,
        "min": 0.0,
        "max": 444.0,
        "step": 1.0,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["left"], "keys": ["Shift"], "strict": true },
            "action": { "axis": "mouse.x", "sensitivity": 3.0, "scale": 1.0, "curve": "linear" }
          }
        ]
      },
      {
        "parameter": "haptic.intensity",
        "label": "Vibration Intensity",
        "type": "float",
        "unit": "linear",
        "default": 0.7,
        "min": 0.0,
        "max": 1.0,
        "step": 0.01,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["left"], "keys": ["Ctrl", "Alt"], "strict": true },
            "action": { "axis": "mouse.y", "sensitivity": -0.01, "scale": 1.0, "curve": "exponential" }
          }
        ]
      },
      {
        "parameter": "haptic.frequency",
        "label": "Vibration Frequency",
        "type": "float",
        "unit": "Hz",
        "default": 150.0,
        "min": 10.0,
        "max": 250.0,
        "step": 1.0,
        "smoothingTime": 0.1,
        "mappings": [
          {
            "combo": { "mouseButtons": ["right"], "keys": ["Ctrl"], "strict": true },
            "action": { "axis": "mouse.x", "sensitivity": 0.5, "scale": 1.0, "curve": "exponential" }
          }
        ]
      }
    ]
  },

  "modulations": [
    {
      "id": "radius_pulse",
      "target": "u_r",
      "type": "additive",
      "waveform": "triangle",
      "frequency": 0.05,
      "amplitude": 0.1,
      "offset": 0.5,
      "phase": 0.0,
      "scale": 0.001,
      "scaleProfile": "linear",
      "min": 0.0,
      "max": 1.0
    },
    {
      "id": "detune_pulse",
      "target": "tone.detune",
      "type": "additive",
      "waveform": "triangle",
      "frequency": 0.05,
      "amplitude": 0.1,
      "offset": 0.5,
      "phase": 0.0,
      "scale": 0.001,
      "scaleProfile": "linear",
      "min": 0.0,
      "max": 100.0
    },
    {
      "id": "haptic_pulse",
      "target": "haptic.intensity",
      "type": "additive",
      "waveform": "sine",
      "frequency": 1.0,
      "amplitude": 0.2,
      "offset": 0.7,
      "phase": 0.0,
      "scale": 1.0,
      "scaleProfile": "linear",
      "min": 0.0,
      "max": 1.0
    }
  ]
}