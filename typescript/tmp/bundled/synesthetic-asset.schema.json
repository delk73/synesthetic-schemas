{
  "$id": "https://schemas.synesthetic.dev/0.7.0/synesthetic-asset.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "properties": {
    "control": {
      "anyOf": [
        {
          "$id": "https://schemas.synesthetic.dev/0.7.0/control-bundle.schema.json",
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "properties": {
            "control_parameters": {
              "items": {
                "$defs": {
                  "ActionType": {
                    "properties": {
                      "axis": {
                        "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/AxisType"
                      },
                      "curve": {
                        "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/CurveType"
                      },
                      "scale": {
                        "default": 1,
                        "title": "Scale",
                        "type": "number"
                      },
                      "sensitivity": {
                        "title": "Sensitivity",
                        "type": "number"
                      }
                    },
                    "required": [
                      "axis",
                      "sensitivity"
                    ],
                    "title": "ActionType",
                    "type": "object"
                  },
                  "AxisType": {
                    "enum": [
                      "mouse.x",
                      "mouse.y",
                      "mouse.wheel"
                    ],
                    "title": "AxisType",
                    "type": "string"
                  },
                  "ComboType": {
                    "properties": {
                      "keys": {
                        "anyOf": [
                          {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "default": null,
                        "title": "Keys"
                      },
                      "mouseButtons": {
                        "anyOf": [
                          {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "default": null,
                        "title": "Mousebuttons"
                      },
                      "strict": {
                        "default": false,
                        "title": "Strict",
                        "type": "boolean"
                      },
                      "wheel": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "default": null,
                        "title": "Wheel"
                      }
                    },
                    "title": "ComboType",
                    "type": "object"
                  },
                  "CurveType": {
                    "enum": [
                      "linear",
                      "exponential",
                      "sine",
                      "discrete"
                    ],
                    "title": "CurveType",
                    "type": "string"
                  },
                  "DataType": {
                    "enum": [
                      "float",
                      "int",
                      "bool",
                      "string"
                    ],
                    "title": "DataType",
                    "type": "string"
                  },
                  "Mapping": {
                    "properties": {
                      "action": {
                        "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/ActionType"
                      },
                      "combo": {
                        "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/ComboType"
                      }
                    },
                    "required": [
                      "combo",
                      "action"
                    ],
                    "title": "Mapping",
                    "type": "object"
                  }
                },
                "$id": "https://schemas.synesthetic.dev/0.7.0/control.schema.json",
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "additionalProperties": false,
                "properties": {
                  "default": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Default"
                  },
                  "label": {
                    "minLength": 1,
                    "title": "Label",
                    "type": "string"
                  },
                  "mappings": {
                    "items": {
                      "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/Mapping"
                    },
                    "title": "Mappings",
                    "type": "array"
                  },
                  "max": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": null,
                    "title": "Max"
                  },
                  "min": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": null,
                    "title": "Min"
                  },
                  "options": {
                    "anyOf": [
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": null,
                    "title": "Options"
                  },
                  "parameter": {
                    "minLength": 1,
                    "title": "Parameter",
                    "type": "string"
                  },
                  "smoothingTime": {
                    "default": 0,
                    "title": "Smoothingtime",
                    "type": "number"
                  },
                  "step": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": null,
                    "title": "Step"
                  },
                  "type": {
                    "$ref": "#/properties/control/anyOf/0/properties/control_parameters/items/%24defs/DataType"
                  },
                  "unit": {
                    "minLength": 1,
                    "title": "Unit",
                    "type": "string"
                  }
                },
                "required": [
                  "parameter",
                  "label",
                  "type",
                  "unit",
                  "default",
                  "mappings"
                ],
                "title": "Control",
                "type": "object",
                "x-schema-version": "0.7.0"
              },
              "title": "Control Parameters",
              "type": "array"
            },
            "description": {
              "default": null,
              "title": "Description",
              "type": [
                "string",
                "null"
              ]
            },
            "meta_info": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Meta Info"
            },
            "name": {
              "title": "Name",
              "type": "string"
            }
          },
          "required": [
            "name",
            "control_parameters"
          ],
          "title": "control-bundle",
          "type": "object",
          "x-schema-version": "0.7.0"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "created_at": {
      "format": "date-time",
      "readOnly": true,
      "type": "string"
    },
    "description": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Description of the asset's purpose",
      "examples": [
        "A circle that pulses and changes color and sound frequency based on user controls"
      ],
      "title": "Description"
    },
    "haptic": {
      "anyOf": [
        {
          "$defs": {
            "DeviceConfig": {
              "properties": {
                "options": {
                  "additionalProperties": {
                    "$ref": "#/properties/haptic/anyOf/0/%24defs/DeviceOptionValue"
                  },
                  "description": "Device-specific configuration options",
                  "title": "Options",
                  "type": "object"
                },
                "type": {
                  "description": "Type of haptic device",
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "options"
              ],
              "title": "DeviceConfig",
              "type": "object"
            },
            "DeviceOptionValue": {
              "properties": {
                "unit": {
                  "description": "Unit of measurement for the option",
                  "title": "Unit",
                  "type": "string"
                },
                "value": {
                  "description": "Value of the device option",
                  "title": "Value",
                  "type": "number"
                }
              },
              "required": [
                "value",
                "unit"
              ],
              "title": "DeviceOptionValue",
              "type": "object"
            },
            "HapticParameter": {
              "properties": {
                "default": {
                  "description": "Default value",
                  "title": "Default"
                },
                "max": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Maximum allowed value",
                  "title": "Max"
                },
                "min": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Minimum allowed value",
                  "title": "Min"
                },
                "name": {
                  "description": "Name of the parameter",
                  "title": "Name",
                  "type": "string"
                },
                "options": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Available options for enum types",
                  "title": "Options"
                },
                "parameter": {
                  "description": "The parameter",
                  "title": "Parameter",
                  "type": "string"
                },
                "path": {
                  "description": "Path to the parameter",
                  "title": "Path",
                  "type": "string"
                },
                "smoothingTime": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Smoothing time in seconds",
                  "title": "Smoothingtime"
                },
                "step": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Step increment value",
                  "title": "Step"
                },
                "type": {
                  "description": "Data type of the parameter",
                  "title": "Type",
                  "type": "string"
                },
                "unit": {
                  "description": "Unit of measurement",
                  "title": "Unit",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "parameter",
                "path",
                "type",
                "unit",
                "default"
              ],
              "title": "HapticParameter",
              "type": "object"
            }
          },
          "$id": "https://schemas.synesthetic.dev/0.7.0/haptic.schema.json",
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "properties": {
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Description of the haptic configuration",
              "title": "Description"
            },
            "device": {
              "$ref": "#/properties/haptic/anyOf/0/%24defs/DeviceConfig",
              "description": "Device configuration"
            },
            "input_parameters": {
              "description": "List of input parameters",
              "items": {
                "$ref": "#/properties/haptic/anyOf/0/%24defs/HapticParameter"
              },
              "title": "Input Parameters",
              "type": "array"
            },
            "meta_info": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Metadata about the haptic configuration",
              "examples": [
                {
                  "category": "haptic",
                  "complexity": "medium",
                  "tags": [
                    "vibration",
                    "feedback"
                  ]
                }
              ],
              "title": "Meta Info"
            },
            "name": {
              "description": "Name of the haptic configuration",
              "title": "Name",
              "type": "string"
            }
          },
          "required": [
            "device",
            "input_parameters",
            "name"
          ],
          "title": "Haptic",
          "type": "object",
          "x-schema-version": "0.7.0"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "meta_info": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Metadata about the asset",
      "examples": [
        {
          "category": "visual",
          "complexity": "medium",
          "tags": [
            "geometric",
            "reactive",
            "audio"
          ]
        }
      ],
      "title": "Meta Info"
    },
    "modulation": {
      "anyOf": [
        {
          "$defs": {
            "ModulationItem": {
              "properties": {
                "amplitude": {
                  "description": "Amplitude of the modulation",
                  "title": "Amplitude",
                  "type": "number"
                },
                "frequency": {
                  "description": "Frequency of the modulation in Hz",
                  "title": "Frequency",
                  "type": "number"
                },
                "id": {
                  "description": "Unique identifier for the modulation",
                  "title": "Id",
                  "type": "string"
                },
                "max": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Maximum allowable value for the modulation",
                  "title": "Max"
                },
                "min": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "Minimum allowable value for the modulation",
                  "title": "Min"
                },
                "offset": {
                  "description": "Offset/base value of the modulation",
                  "title": "Offset",
                  "type": "number"
                },
                "phase": {
                  "description": "Phase offset in radians",
                  "title": "Phase",
                  "type": "number"
                },
                "scale": {
                  "default": 1,
                  "description": "Scaling factor applied to the modulation output",
                  "title": "Scale",
                  "type": "number"
                },
                "scaleProfile": {
                  "description": "Response profile to shape the modulation output",
                  "enum": [
                    "linear",
                    "exponential",
                    "logarithmic",
                    "sine",
                    "cosine"
                  ],
                  "title": "Scaleprofile",
                  "type": "string"
                },
                "target": {
                  "description": "Target parameter path (e.g., 'visual.u_wave_speed', 'tone.filter.frequency')",
                  "title": "Target",
                  "type": "string"
                },
                "type": {
                  "description": "Type of modulation",
                  "enum": [
                    "additive",
                    "multiplicative"
                  ],
                  "title": "Type",
                  "type": "string"
                },
                "waveform": {
                  "description": "Waveform type",
                  "enum": [
                    "sine",
                    "triangle",
                    "square",
                    "sawtooth"
                  ],
                  "title": "Waveform",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "target",
                "type",
                "waveform",
                "frequency",
                "amplitude",
                "offset",
                "phase"
              ],
              "title": "ModulationItem",
              "type": "object"
            }
          },
          "$id": "https://schemas.synesthetic.dev/0.7.0/modulation.schema.json",
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "properties": {
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Description of the modulation set",
              "title": "Description"
            },
            "meta_info": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Metadata about the modulation set",
              "examples": [
                {
                  "category": "modulation",
                  "complexity": "medium",
                  "tags": [
                    "multimodal",
                    "dynamic"
                  ]
                }
              ],
              "title": "Meta Info"
            },
            "modulations": {
              "description": "List of modulations",
              "examples": [
                {
                  "amplitude": 0.5,
                  "frequency": 0.5,
                  "id": "wave_speed_pulse",
                  "max": 1,
                  "min": 0,
                  "offset": 1,
                  "phase": 0,
                  "scale": 1,
                  "scaleProfile": "linear",
                  "target": "visual.u_wave_speed",
                  "type": "additive",
                  "waveform": "triangle"
                },
                {
                  "amplitude": 400,
                  "frequency": 0.25,
                  "id": "filter_sweep",
                  "max": 1,
                  "min": 0,
                  "offset": 800,
                  "phase": 0,
                  "scale": 1,
                  "scaleProfile": "exponential",
                  "target": "tone.filter.frequency",
                  "type": "additive",
                  "waveform": "triangle"
                },
                {
                  "amplitude": 0.2,
                  "frequency": 1,
                  "id": "haptic_pulse",
                  "max": 1,
                  "min": 0,
                  "offset": 0.6,
                  "phase": 0,
                  "scale": 1,
                  "scaleProfile": "linear",
                  "target": "haptic.intensity",
                  "type": "additive",
                  "waveform": "sine"
                }
              ],
              "items": {
                "$ref": "#/properties/modulation/anyOf/0/%24defs/ModulationItem"
              },
              "title": "Modulations",
              "type": "array"
            },
            "name": {
              "description": "Name of the modulation set",
              "title": "Name",
              "type": "string"
            }
          },
          "required": [
            "modulations",
            "name"
          ],
          "title": "Modulation",
          "type": "object",
          "x-schema-version": "0.7.0"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "modulations": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/properties/modulation/anyOf/0/%24defs/ModulationItem"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Array of modulations for this asset",
      "examples": [
        {
          "amplitude": 0.5,
          "frequency": 0.5,
          "id": "wave_speed_pulse",
          "max": 1,
          "min": 0,
          "offset": 1,
          "phase": 0,
          "scale": 1,
          "scaleProfile": "linear",
          "target": "visual.u_wave_speed",
          "type": "additive",
          "waveform": "triangle"
        }
      ],
      "title": "Modulations"
    },
    "name": {
      "description": "Name of the synesthetic asset",
      "examples": [
        "Circle Pulsar"
      ],
      "minLength": 1,
      "title": "Name",
      "type": "string"
    },
    "rule_bundle": {
      "$defs": {
        "Rule": {
          "additionalProperties": false,
          "description": "Representation of a single rule within a bundle.",
          "properties": {
            "effects": {
              "anyOf": [
                {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Effects applied when the rule is triggered",
              "title": "Effects"
            },
            "execution": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Execution environment for the rule",
              "title": "Execution"
            },
            "expr": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                },
                {
                  "contentMediaType": "application/json",
                  "contentSchema": {
                    "type": "object"
                  },
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Expression defining the rule logic",
              "title": "Expr"
            },
            "id": {
              "description": "Unique rule identifier",
              "title": "Id",
              "type": "string"
            },
            "target": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Parameter path the rule targets",
              "title": "Target"
            },
            "trigger": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Trigger configuration for the rule",
              "title": "Trigger"
            }
          },
          "required": [
            "id"
          ],
          "title": "Rule",
          "type": "object"
        }
      },
      "$id": "https://schemas.synesthetic.dev/0.7.0/rule-bundle.schema.json",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "example": {
        "description": "A rule that maps interactions on a virtual grid to multimodal outputs by defining channels that link grid pressure to parameter changes.",
        "meta_info": {
          "category": "rule_bundle",
          "complexity": "high",
          "tags": [
            "grid",
            "interaction",
            "multimodal",
            "mapping",
            "client-side"
          ]
        },
        "name": "SDF Grid Rules",
        "rules": [
          {
            "effects": [
              {
                "channel": "audioTrigger",
                "op": "triggerAttackRelease",
                "target": "tone.synth",
                "value": {
                  "duration": "8n",
                  "note": "<grid.note>",
                  "velocity": {
                    "curve": "linear",
                    "scale": 1,
                    "source": "grid.pressure",
                    "threshold": 0.02
                  }
                }
              }
            ],
            "execution": "client",
            "id": "grid_to_multimodal_mapping",
            "trigger": {
              "params": {
                "cooldown": 100,
                "gridSize": 8
              },
              "type": "grid_cell"
            }
          }
        ]
      },
      "properties": {
        "created_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Creation time",
          "title": "Created At"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Bundle details",
          "title": "Description"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Database ID",
          "title": "Id"
        },
        "meta_info": {
          "description": "Metadata about the rule bundle",
          "title": "Meta Info",
          "type": "object"
        },
        "name": {
          "description": "Human readable bundle name",
          "title": "Name",
          "type": "string"
        },
        "rules": {
          "description": "List of rules",
          "items": {
            "$ref": "#/properties/rule_bundle/%24defs/Rule"
          },
          "title": "Rules",
          "type": "array"
        },
        "updated_at": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Last update time",
          "title": "Updated At"
        }
      },
      "required": [
        "name",
        "rules"
      ],
      "title": "RuleBundle",
      "type": "object",
      "x-schema-version": "0.7.0"
    },
    "shader": {
      "anyOf": [
        {
          "$defs": {
            "InputParameter": {
              "properties": {
                "default": {
                  "title": "Default",
                  "type": "number"
                },
                "max": {
                  "title": "Max",
                  "type": "number"
                },
                "min": {
                  "title": "Min",
                  "type": "number"
                },
                "name": {
                  "title": "Name",
                  "type": "string"
                },
                "parameter": {
                  "title": "Parameter",
                  "type": "string"
                },
                "path": {
                  "title": "Path",
                  "type": "string"
                },
                "smoothingTime": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Smoothingtime"
                },
                "step": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Step"
                },
                "type": {
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "parameter",
                "path",
                "type",
                "default",
                "min",
                "max"
              ],
              "title": "InputParameter",
              "type": "object"
            },
            "UniformDef": {
              "properties": {
                "default": {
                  "title": "Default"
                },
                "name": {
                  "title": "Name",
                  "type": "string"
                },
                "stage": {
                  "title": "Stage",
                  "type": "string"
                },
                "type": {
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "stage",
                "default"
              ],
              "title": "UniformDef",
              "type": "object"
            }
          },
          "$id": "https://schemas.synesthetic.dev/0.7.0/shader.schema.json",
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": false,
          "properties": {
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Description"
            },
            "fragment_shader": {
              "description": "GLSL fragment shader code",
              "examples": [
                "// fragment shader example"
              ],
              "title": "Fragment Shader",
              "type": "string"
            },
            "input_parameters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/properties/shader/anyOf/0/%24defs/InputParameter"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Input Parameters"
            },
            "meta_info": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Metadata about the shader",
              "examples": [
                {
                  "category": "visual",
                  "complexity": "low",
                  "tags": [
                    "circle",
                    "sdf"
                  ]
                }
              ],
              "title": "Meta Info"
            },
            "name": {
              "description": "Name of the shader",
              "examples": [
                "Circle Shader"
              ],
              "title": "Name",
              "type": "string"
            },
            "uniforms": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/properties/shader/anyOf/0/%24defs/UniformDef"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Uniforms"
            },
            "vertex_shader": {
              "description": "GLSL vertex shader code",
              "examples": [
                "// vertex shader example"
              ],
              "title": "Vertex Shader",
              "type": "string"
            }
          },
          "required": [
            "fragment_shader",
            "name",
            "vertex_shader"
          ],
          "title": "Shader",
          "type": "object",
          "x-schema-version": "0.7.0"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "tone": {
      "anyOf": [
        {
          "$defs": {
            "SynthType": {
              "description": "Allowed Tone.js synth types.",
              "enum": [
                "Tone.Synth",
                "Tone.PolySynth",
                "Tone.MonoSynth",
                "Tone.FMSynth",
                "Tone.AMSynth",
                "Tone.DuoSynth",
                "Tone.MembraneSynth",
                "Tone.MetalSynth",
                "Tone.PluckSynth"
              ],
              "title": "SynthType",
              "type": "string"
            },
            "ToneEffect": {
              "additionalProperties": true,
              "properties": {
                "options": {
                  "title": "Options",
                  "type": "object"
                },
                "order": {
                  "title": "Order",
                  "type": "integer"
                },
                "type": {
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "options",
                "order"
              ],
              "title": "ToneEffect",
              "type": "object"
            },
            "ToneMetaInfo": {
              "additionalProperties": true,
              "properties": {
                "category": {
                  "title": "Category",
                  "type": "string"
                },
                "complexity": {
                  "title": "Complexity",
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "title": "Tags",
                  "type": "array"
                }
              },
              "required": [
                "category",
                "tags",
                "complexity"
              ],
              "title": "ToneMetaInfo",
              "type": "object"
            },
            "ToneParameter": {
              "additionalProperties": true,
              "properties": {
                "default": {
                  "title": "Default"
                },
                "max": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Max"
                },
                "min": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Min"
                },
                "name": {
                  "title": "Name",
                  "type": "string"
                },
                "options": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Options"
                },
                "parameter": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Parameter"
                },
                "path": {
                  "title": "Path",
                  "type": "string"
                },
                "smoothingTime": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Smoothingtime"
                },
                "type": {
                  "title": "Type",
                  "type": "string"
                },
                "unit": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Unit"
                }
              },
              "required": [
                "name",
                "path",
                "type",
                "default"
              ],
              "title": "ToneParameter",
              "type": "object"
            },
            "TonePart": {
              "additionalProperties": true,
              "properties": {
                "duration": {
                  "title": "Duration",
                  "type": "string"
                },
                "id": {
                  "title": "Id",
                  "type": "string"
                },
                "loop": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Loop"
                },
                "pattern": {
                  "title": "Pattern",
                  "type": "string"
                },
                "start": {
                  "title": "Start",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "pattern",
                "start",
                "duration"
              ],
              "title": "TonePart",
              "type": "object"
            },
            "TonePattern": {
              "additionalProperties": true,
              "properties": {
                "id": {
                  "title": "Id",
                  "type": "string"
                },
                "options": {
                  "title": "Options",
                  "type": "object"
                },
                "type": {
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type",
                "options"
              ],
              "title": "TonePattern",
              "type": "object"
            },
            "ToneSynth": {
              "additionalProperties": true,
              "properties": {
                "options": {
                  "anyOf": [
                    {
                      "$ref": "#/properties/tone/anyOf/0/%24defs/ToneSynthOptions"
                    },
                    {
                      "type": "object"
                    }
                  ],
                  "title": "Options"
                },
                "type": {
                  "$ref": "#/properties/tone/anyOf/0/%24defs/SynthType"
                }
              },
              "required": [
                "type",
                "options"
              ],
              "title": "ToneSynth",
              "type": "object"
            },
            "ToneSynthOptions": {
              "additionalProperties": true,
              "properties": {
                "envelope": {
                  "title": "Envelope",
                  "type": "object"
                },
                "filter": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Filter"
                },
                "filterEnvelope": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Filterenvelope"
                },
                "oscillator": {
                  "title": "Oscillator",
                  "type": "object"
                },
                "portamento": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "title": "Portamento"
                },
                "volume": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "object"
                    }
                  ],
                  "title": "Volume"
                }
              },
              "required": [
                "oscillator",
                "envelope",
                "volume"
              ],
              "title": "ToneSynthOptions",
              "type": "object"
            }
          },
          "$id": "https://schemas.synesthetic.dev/0.7.0/tone.schema.json",
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "additionalProperties": true,
          "properties": {
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Description of the tone",
              "title": "Description"
            },
            "effects": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/tone/anyOf/0/%24defs/ToneEffect"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Effects configuration",
              "title": "Effects"
            },
            "input_parameters": {
              "description": "Tone input parameters",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/properties/tone/anyOf/0/%24defs/ToneParameter"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "title": "Input Parameters",
              "type": "array"
            },
            "meta_info": {
              "anyOf": [
                {
                  "$ref": "#/properties/tone/anyOf/0/%24defs/ToneMetaInfo"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Additional metadata about the tone",
              "title": "Meta Info"
            },
            "name": {
              "description": "Name of the tone",
              "title": "Name",
              "type": "string"
            },
            "parts": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/tone/anyOf/0/%24defs/TonePart"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Parts configuration",
              "title": "Parts"
            },
            "patterns": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/tone/anyOf/0/%24defs/TonePattern"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patterns configuration",
              "title": "Patterns"
            },
            "synth": {
              "anyOf": [
                {
                  "$ref": "#/properties/tone/anyOf/0/%24defs/ToneSynth"
                },
                {
                  "type": "object"
                }
              ],
              "description": "Synth configuration",
              "title": "Synth"
            }
          },
          "required": [
            "name",
            "synth"
          ],
          "title": "Tone",
          "type": "object",
          "x-schema-version": "0.7.0"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "updated_at": {
      "format": "date-time",
      "readOnly": true,
      "type": "string"
    }
  },
  "required": [
    "name"
  ],
  "title": "SynestheticAsset",
  "type": "object",
  "x-schema-version": "0.7.0"
}
