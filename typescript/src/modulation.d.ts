/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Description of the modulation set
 */
export type Description = string | null;
/**
 * Metadata about the modulation set
 */
export type MetaInfo = {
  [k: string]: unknown;
} | null;
/**
 * Amplitude of the modulation
 */
export type Amplitude = number;
/**
 * Frequency of the modulation in Hz
 */
export type Frequency = number;
/**
 * Unique identifier for the modulation
 */
export type Id = string;
/**
 * Maximum allowable value for the modulation
 */
export type Max = number | null;
/**
 * Minimum allowable value for the modulation
 */
export type Min = number | null;
/**
 * Offset/base value of the modulation
 */
export type Offset = number;
/**
 * Phase offset in radians
 */
export type Phase = number;
/**
 * Scaling factor applied to the modulation output
 */
export type Scale = number;
/**
 * Response profile to shape the modulation output
 */
export type Scaleprofile = "linear" | "exponential" | "logarithmic" | "sine" | "cosine";
/**
 * Target parameter path (e.g., 'visual.u_wave_speed', 'tone.filter.frequency')
 */
export type Target = string;
/**
 * Type of modulation
 */
export type Type = "additive" | "multiplicative";
/**
 * Waveform type
 */
export type Waveform = "sine" | "triangle" | "square" | "sawtooth";
/**
 * List of modulations
 */
export type Modulations = ModulationItem[];
/**
 * Name of the modulation set
 */
export type Name = string;

export interface Modulation {
  description?: Description;
  meta_info?: MetaInfo;
  modulations: Modulations;
  name: Name;
}
export interface ModulationItem {
  amplitude: Amplitude;
  frequency: Frequency;
  id: Id;
  max?: Max;
  min?: Min;
  offset: Offset;
  phase: Phase;
  scale?: Scale;
  scaleProfile?: Scaleprofile;
  target: Target;
  type: Type;
  waveform: Waveform;
  [k: string]: unknown;
}
