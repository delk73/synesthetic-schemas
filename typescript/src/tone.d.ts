/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Description of the tone
 */
export type Description = string | null;
/**
 * Effects configuration
 */
export type Effects =
  | (
      | ToneEffect
      | {
          [k: string]: unknown;
        }
    )[]
  | null;
export type Order = number;
export type Type = string;
export type Name = string;
export type Options1 = string[] | null;
export type Parameter = string | null;
export type Path = string;
export type Smoothingtime = number | null;
export type Type1 = string;
export type Unit = string | null;
/**
 * Tone input parameters
 */
export type InputParameters = (
  | ToneParameter
  | {
      [k: string]: unknown;
    }
)[];
/**
 * Additional metadata about the tone
 */
export type MetaInfo =
  | ToneMetaInfo
  | {
      [k: string]: unknown;
    }
  | null;
export type Category = string;
export type Complexity = string;
export type Tags = string[];
/**
 * Name of the tone
 */
export type Name1 = string;
/**
 * Parts configuration
 */
export type Parts =
  | (
      | TonePart
      | {
          [k: string]: unknown;
        }
    )[]
  | null;
export type Duration = string;
export type Id = string;
export type Loop = boolean | null;
export type Pattern = string;
export type Start = string;
/**
 * Patterns configuration
 */
export type Patterns =
  | (
      | TonePattern
      | {
          [k: string]: unknown;
        }
    )[]
  | null;
export type Id1 = string;
export type Type2 = string;
/**
 * Synth configuration
 */
export type Synth =
  | ToneSynth
  | {
      [k: string]: unknown;
    };
export type Options3 =
  | ToneSynthOptions
  | {
      [k: string]: unknown;
    };
export type Filter = {
  [k: string]: unknown;
} | null;
export type Filterenvelope = {
  [k: string]: unknown;
} | null;
export type Portamento =
  | number
  | {
      [k: string]: unknown;
    }
  | null;
export type Volume =
  | number
  | {
      [k: string]: unknown;
    };
/**
 * Allowed Tone.js synth types.
 */
export type SynthType =
  | "Tone.Synth"
  | "Tone.PolySynth"
  | "Tone.MonoSynth"
  | "Tone.FMSynth"
  | "Tone.AMSynth"
  | "Tone.DuoSynth"
  | "Tone.MembraneSynth"
  | "Tone.MetalSynth"
  | "Tone.PluckSynth";

export interface Tone {
  description?: Description;
  effects?: Effects;
  input_parameters?: InputParameters;
  meta_info?: MetaInfo;
  name: Name1;
  parts?: Parts;
  patterns?: Patterns;
  synth: Synth;
  [k: string]: unknown;
}
export interface ToneEffect {
  options: Options;
  order: Order;
  type: Type;
  [k: string]: unknown;
}
export interface Options {
  [k: string]: unknown;
}
export interface ToneParameter {
  default: Default;
  max?: unknown;
  min?: unknown;
  name: Name;
  options?: Options1;
  parameter?: Parameter;
  path: Path;
  smoothingTime?: Smoothingtime;
  type: Type1;
  unit?: Unit;
  [k: string]: unknown;
}
export interface Default {
  [k: string]: unknown;
}
export interface ToneMetaInfo {
  category: Category;
  complexity: Complexity;
  tags: Tags;
  [k: string]: unknown;
}
export interface TonePart {
  duration: Duration;
  id: Id;
  loop?: Loop;
  pattern: Pattern;
  start: Start;
  [k: string]: unknown;
}
export interface TonePattern {
  id: Id1;
  options: Options2;
  type: Type2;
  [k: string]: unknown;
}
export interface Options2 {
  [k: string]: unknown;
}
export interface ToneSynth {
  options: Options3;
  type: SynthType;
  [k: string]: unknown;
}
export interface ToneSynthOptions {
  envelope: Envelope;
  filter?: Filter;
  filterEnvelope?: Filterenvelope;
  oscillator: Oscillator;
  portamento?: Portamento;
  volume: Volume;
  [k: string]: unknown;
}
export interface Envelope {
  [k: string]: unknown;
}
export interface Oscillator {
  [k: string]: unknown;
}
