# generated by datamodel-codegen:
#   filename:  haptic.schema.json

from __future__ import annotations

from typing import Any, Dict, List

from pydantic import BaseModel, Field


class DeviceOptionValue(BaseModel):
    unit: str = Field(
        ..., description='Unit of measurement for the option', title='Unit'
    )
    value: float = Field(..., description='Value of the device option', title='Value')


class HapticParameter(BaseModel):
    default: Any = Field(..., description='Default value', title='Default')
    max: float | None = Field(None, description='Maximum allowed value', title='Max')
    min: float | None = Field(None, description='Minimum allowed value', title='Min')
    name: str = Field(..., description='Name of the parameter', title='Name')
    options: List[str] | None = Field(
        None, description='Available options for enum types', title='Options'
    )
    parameter: str = Field(..., description='The parameter', title='Parameter')
    path: str = Field(..., description='Path to the parameter', title='Path')
    smoothingTime: float | None = Field(
        None, description='Smoothing time in seconds', title='Smoothingtime'
    )
    step: float | None = Field(None, description='Step increment value', title='Step')
    type: str = Field(..., description='Data type of the parameter', title='Type')
    unit: str = Field(..., description='Unit of measurement', title='Unit')


class DeviceConfig(BaseModel):
    options: Dict[str, DeviceOptionValue] = Field(
        ..., description='Device-specific configuration options', title='Options'
    )
    type: str = Field(..., description='Type of haptic device', title='Type')


class Haptic(BaseModel):
    description: str | None = Field(
        None, description='Description of the haptic configuration', title='Description'
    )
    device: DeviceConfig = Field(..., description='Device configuration')
    input_parameters: List[HapticParameter] = Field(
        ..., description='List of input parameters', title='Input Parameters'
    )
    meta_info: Dict[str, Any] | None = Field(
        None,
        description='Metadata about the haptic configuration',
        examples=[
            {
                'category': 'haptic',
                'complexity': 'medium',
                'tags': ['vibration', 'feedback'],
            }
        ],
        title='Meta Info',
    )
    name: str = Field(..., description='Name of the haptic configuration', title='Name')
